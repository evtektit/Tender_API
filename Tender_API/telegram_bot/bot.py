# telegram_bot/bot.py
import asyncio
import os
from aiogram import Bot, Dispatcher
from aiogram.types import Message
from aiogram.filters import CommandStart
from dotenv import load_dotenv
import httpx
from logger import get_logger

# –õ–æ–≥–≥–µ—Ä
logger = get_logger(__name__)
logger.info("üöÄ Telegram-–±–æ—Ç —Å—Ç–∞—Ä—Ç—É–µ—Ç")

# –ó–∞–≥—Ä—É–∑–∫–∞ .env
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
API_URL = "http://api:8000/ai/ask"

# –ë–æ—Ç –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(CommandStart())
async def handle_start(message: Message):
    logger.info(f"üì© –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –Ω–∞—á–∞–ª —Å /start")
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å —Ç–µ–Ω–¥–µ—Ä–∞–º–∏. –ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å.")

# –õ—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@dp.message()
async def handle_any_message(message: Message):
    user_input = message.text
    logger.info(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.from_user.id}: {user_input}")
    await message.answer("ü§ñ –î—É–º–∞—é...")

    try:
        async with httpx.AsyncClient() as client:
            response = await client.post(API_URL, json={"prompt": user_input})
            result = response.json()
            reply = result.get("response", "‚ö†Ô∏è –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç AI")
    except Exception as e:
        logger.exception("üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ AI")
        reply = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ AI: {e}"

    await message.answer(reply)

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
