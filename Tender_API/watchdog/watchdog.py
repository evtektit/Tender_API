import os
import time
import logging
import requests
import socket

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(message)s",
    handlers=[
        logging.FileHandler("watchdog.log", mode="a", encoding="utf-8"),
        logging.StreamHandler()
    ]
)

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—ã (–≤ Docker –∏–ª–∏ –Ω–µ—Ç)
def is_running_in_docker():
    return os.path.exists("/.dockerenv")

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ API
if is_running_in_docker():
    API_URL = os.getenv("API_URL", "http://api:8000/health")
else:
    API_URL = os.getenv("API_URL", "http://localhost:8000/health")

logging.info("üê∂ Watchdog –∑–∞–ø—É—â–µ–Ω")
logging.info(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º API –ø–æ –∞–¥—Ä–µ—Å—É: {API_URL}")

def check_api():
    try:
        response = requests.get(API_URL, timeout=5)
        if response.status_code == 200:
            logging.info("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω (200 OK)")
        else:
            logging.warning(f"‚ö†Ô∏è API –æ—Ç–≤–µ—Ç–∏–ª: {response.status_code}")
    except Exception as e:
        logging.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API:")
        logging.exception(e)

if __name__ == "__main__":
    while True:
        check_api()
        time.sleep(10)
