import os
import openai
from dotenv import load_dotenv
import socket
import time  # üîß –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç–æ

load_dotenv()
openai.api_key = os.getenv("OPENAI_API_KEY")

def wait_for_internet(timeout=60):
    print("‚è≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —á–µ—Ä–µ–∑ VPN...")
    for i in range(timeout):
        try:
            socket.gethostbyname('openai.com')
            print(f"üåê –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —á–µ—Ä–µ–∑ VPN –¥–æ—Å—Ç—É–ø–µ–Ω (–Ω–∞ {i+1}-–π —Å–µ–∫—É–Ω–¥–µ)")
            return True
        except socket.gaierror:
            time.sleep(1)
    print("‚ùå –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —á–µ—Ä–µ–∑ VPN –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    return False

def ask_gpt(prompt: str) -> str:
    return f"üß† (–∑–∞–≥–ª—É—à–∫–∞): –ø–æ–ª—É—á–∏–ª '{prompt}'"

# def ask_gpt(prompt: str) -> str:
#     try:
#         response = openai.ChatCompletion.create(
#             model="gpt-3.5-turbo",
#             messages=[
#                 {"role": "user", "content": prompt}
#             ]
#         )
#         return response['choices'][0]['message']['content'].strip()
#     except Exception as e:
#         return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ GPT: {str(e)}"
#
#
# if __name__ == "__main__":
#     print("üí¨ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ GPT...")
#
#     if wait_for_internet():
#         response = ask_gpt("–ü—Ä–∏–≤–µ—Ç! –¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å?")
#         print("üß† –û—Ç–≤–µ—Ç GPT:", response)
#     else:
#         print("üö´ GPT-–∑–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω—ë–Ω –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è VPN")
