import os
import time
import logging
import requests

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(message)s",
    handlers=[
        logging.FileHandler("watchdog.log", mode="a", encoding="utf-8"),
        logging.StreamHandler()
    ]
)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤ Docker –∏–ª–∏ –Ω–µ—Ç
IS_DOCKER = os.path.exists("/.dockerenv")

# –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
SERVICES = {
    "api": "http://api:8000/health",
    "ai_worker": "http://ai_worker:8001/health",
    "telegram_bot": "http://telegram_bot:8002/health",
    "parsers": "http://parsers:8003/health",
    "eis_loader": "http://eis_loader:8004/health"
}

# –í –ª–æ–∫–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–µ –∑–∞–º–µ–Ω–∏ —Ö–æ—Å—Ç—ã –Ω–∞ localhost –∏ –ø–æ—Ä—Ç—ã
if not IS_DOCKER:
    SERVICES = {
        name: url.replace(f"{name}", "localhost") for name, url in SERVICES.items()
    }

logging.info("üê∂ Watchdog –Ω–∞—á–∞–ª –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:")
for name, url in SERVICES.items():
    logging.info(f"  - {name}: {url}")

def check_service(name, url):
    try:
        response = requests.get(url, timeout=5)
        if response.status_code == 200:
            logging.info(f"‚úÖ {name} –¥–æ—Å—Ç—É–ø–µ–Ω (200 OK)")
        else:
            logging.warning(f"‚ö†Ô∏è {name} –æ—Ç–≤–µ—Ç–∏–ª: {response.status_code}")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {name}: {e}")

if __name__ == "__main__":
    while True:
        for name, url in SERVICES.items():
            check_service(name, url)
        time.sleep(10)
