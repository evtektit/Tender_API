version: "3.9"

services:

  api:
    build:
      context: .
      dockerfile: api/Dockerfile.api
    container_name: tenderbotaiproject-api
    restart: always
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - ai_worker
    networks:
      - tender-net

  eis_api:
    build:
      context: ./eis_api
      dockerfile: Dockerfile.eis
    dns:
      - 8.8.8.8
      - 1.1.1.1
    container_name: eis_api
    restart: "no"

  telegram_bot:
    build:
      context: ./telegram_bot
      dockerfile: Dockerfile.bot
    container_name: tenderbotaiproject-telegram-bot
    restart: always
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    depends_on:
      - api
      - ai_worker
    networks:
      - tender-net
    dns:
      - 8.8.8.8

  ai_worker:
    build:
      context: ./ai_worker
      dockerfile: Dockerfile.ai
    container_name: tenderbotaiproject-ai-worker
    restart: always
    env_file:
      - .env
    network_mode: "service:vpn_gateway"  # ðŸ‘ˆ Ñ‚Ð¾Ð»ÑŒÐºÐ¾ AI Ñ‡ÐµÑ€ÐµÐ· VPN

  vpn_gateway:
    build:
      context: ./vpn_gateway
      dockerfile: Dockerfile.vpn
    container_name: tenderbotaiproject-vpn
    cap_add: [ "NET_ADMIN" ]
    devices: [ "/dev/net/tun" ]
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
    volumes:
      - ./vpn_gateway/vpn_configs:/etc/openvpn
    restart: "no"
    networks:
      - tender-net
    dns:
      - 8.8.8.8
      - 1.1.1.1

  watchdog:
    build:
      context: ./watchdog
      dockerfile: Dockerfile.watchdog
    container_name: tenderbotaiproject-watchdog
    restart: always
    environment:
      - API_URL=http://api:8000/health
    depends_on:
      - api
    networks:
      - tender-net

networks:
  tender-net:
    driver: bridge
