services:
  ai_worker:
    build:
      context: .
      dockerfile: ai_worker/Dockerfile.ai
    container_name: tenderbotaiproject-ai-worker
    restart: always
    env_file:
      - .env
    command: python ai_worker/health_check.py
    ports:
      - "8010:8010"
    networks:
      - tender-net

  api:
    build:
      context: .
      dockerfile: ./api/Dockerfile.api
    container_name: tenderbotaiproject-api
    restart: always
    env_file:
      - .env
    ports:
      - "8000:8000"
    networks:
      - tender-net

  telegram_bot:
    build:
      context: .
      dockerfile: telegram_bot/Dockerfile.bot
    container_name: tenderbotaiproject-telegram-bot
    restart: always
    env_file:
      - .env
    command: sh -c "python bot.py & python health_check.py"
    volumes:
      - ./logs:/app/logs
    depends_on:
      - api
      - ai_worker
    ports:
      - "8011:8011"
    networks:
      - tender-net
    dns:
      - 8.8.8.8
      - 1.1.1.1

  watchdog:
    build:
      context: ./common/watchdog
      dockerfile: Dockerfile.watchdog
    container_name: tenderbotaiproject-watchdog
    restart: always
    command: "python health_check.py"
    ports:
      - "8012:8012"
    networks:
      - tender-net

  eis_loader:
    build:
      context: ./parsers/eis_loader
      dockerfile: Dockerfile.eis
    container_name: tenderbotaiproject-eis-loader
    command: python health_check.py
    ports:
      - "8013:8013"
    restart: always
    networks:
      - tender-net

networks:
  tender-net:
    driver: bridge
